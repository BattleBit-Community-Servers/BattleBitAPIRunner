name: Build and Publish

on:
  push:
    tags:
      - '*'
    branches:
      - '*'

jobs:
  build-publish-on-main:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: 6

    - name: NuGet Restore
      run: dotnet restore

    - name: Build and Publish project
      run: dotnet publish BattleBitAPIRunner/BattleBitAPIRunner.csproj -c Release -o ./publish

    - name: Build nuget
      run: dotnet build BattleBitAPIRunner/BattleBitAPIRunner.csproj -c Release

    - name: Create NuGet package
      run: dotnet pack BBRAPIModules/BBRAPIModules.csproj --configuration Release --output ./nuget

    - name: Generate changelog
      id: generate-changelog
      run: |
        tag_name="${{ github.ref }}"
        previous_tag=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1))
        changelog=$(git log --pretty=format:"- %s" $previous_tag..$tag_name)
        echo "::set-output name=changelog::$changelog"
        
    - name: Publish Release Assets
      id: publish-assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          publish/*
          nuget/*.nupkg
        tag_name: ${{ github.ref }}
        body: ${{ steps.generate-changelog.outputs.changelog }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-check-on-commits:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: 6

    - name: Build project and check for errors on non-main branch commits
      run: |
        dotnet build --configuration Release
        if [ $? -ne 0 ]; then
          echo "Build failed"
          exit 1
        fi